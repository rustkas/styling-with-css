<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><head><title>Content first in markup demo</title><meta http-equiv="Content-type" content="text/html; charset=iso-8859-1" /><meta http-equiv="Content-Language" content="en-us" /><style type="text/css">/* The Wyke-Switch - by Charlie Wyke-Smith - switch your left and center columns in your layout to have the center column first in the markup!PLEASE NOTE THIS VERSION HAS BEEN REVISED FROM THE ONE SHOWN IN THE BOOK IN FOUR IMPORTANT WAYS:1) The Aslett clearing method is included to ensure the footer clears properly2) The layout centers in the browser if the browser is sized wider than the layout - note mainwrapper added around entire layout/markup3) Faux columns are added (note: color the background of the mainwrapper to color the background of the center column)4) float:left added to the footer - for some bizarre reason, the footer background color appears under the header without it, even tho the text displays in the correct placePutting the content first in your markup can significantly improve your search engine rankings.This demo shows the CSS required to switch the left and center column - the center column (content - div "column2") is first in the markup but appears after the left column (navigation - div "column1") in the layout.Without the margin-left properties on columns 1 and 2, they appear in the browser in the order shown in the markup - 2, 1, 3.The 1-2-3 arrangement is achieved by the use of a negative left margin on column 1 to move it to the left and a positive left margin on column 2 to move it to the right, which exchanges the position of the two columns.Note that left margins on left floats get doubled in IE unles you apply the Steve Caslon hack of adding display:inline tothe element, in this case column 2. More on this bug at http://www.positioniseverything.net/explorer/doubled-margin.html  This example also uses a floated wrapper around the three columns - this forces the wrapper to enclose the three columns so that the footer is always below whichever column is longest. */body {font: 0.8em verdana, arial, sans-serif;}* {margin:0px; padding:0px;}div#mainwrapper {width:650px; margin-left:auto; margin-right:auto; background-color:#CFC; /* this b/g color is visible below the center col content div  */}div#header {width:650px; background-color:#CAF;} div#contentarea {float:left; width:650px; background-color:#999;				background:url(images_pres/neg_margin_faux_left.gif) repeat-y top left; /* faux columns graphic left column */ }div#contentarea2 {float:left; width:650px; background-color:#333;				background:url(images_pres/neg_margin_faux_right.gif) repeat-y top right; /* faux columns graphic right column */}div#column1 {float:left; width:150px; margin-left:-500px; background-color:#FCC;}div#column2 {float:left; width:350px; margin-left:150px; display:inline; background-color:#CFC;}div#column3 { float:left; width:150px; background-color:#AAF;}div#footer {width:650px; background-color:#FAC; float:left; /* float:left ensures the footer background displays correctly - below the container divs, not the header *//* this is a change from the example in the book */				}/* here follows the brillant "no-extra-markup" clearing method devised by Tony Aslett - www.csscreator.com *//* simply add the clearfix class to any containter that must enclose floated elements *//* read the details of how and why this works at http://www.positioniseverything.net/easyclearing.html */.clearfix:after {    content: ".";              /* the period is placed on the page as the last thing before the div closes */	display: block;          /* inline elements don't respond to the clear property */     height: 0;                  /* ensure the period is not visible */    clear: both;               /* make the container clear the period */    visibility: hidden;	     /* further ensures the period is not visible */}.clearfix {display: inline-block;}   /* a fix for IE Mac *//* next a fix for the dreaded Guillotine bug in IE6 *//* Hides from IE-mac \*/* html .clearfix {height: 1%;}.clearfix {display: block;}/* End hide from IE-mac *//* end of "no-extra-markup" clearing method */</style></head><body><div id="mainwrapper"  class="clearfix"><div id="header">This is the header</div><div id="contentarea" class="clearfix"><div id="contentarea2" class="clearfix"><div id="column2">Column 2. This is the first column in the markup. This is the page's content.The "contentarea"  wrapper round the three columns is floated left like the three columns, to force it to enclose the three columns. Because of this, no matter which of the three columns is longest, the footer sits below it....</div><div id="column1">Column 1. This is the second column in the markup. This is the left navigation. The "contentarea"  wrapper round the three columns is floated left like the three columns, to force it to enclose the three columns. Because of this, no matter which of the three columns is longest, the footer sits below it.</div><div id="column3">Column 3. This is the third column in the markup. </div></div><!--end contentarea2--></div><!--end contentarea--><div id="footer">This is the footer</div></div><!-- end div mainwrapper --></body></html>