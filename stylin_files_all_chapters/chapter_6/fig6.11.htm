<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><head><title>Content first in markup demo</title><meta http-equiv="Content-type" content="text/html; charset=iso-8859-1" /><meta http-equiv="Content-Language" content="en-us" /><style type="text/css">/* The Wyke-Switch - by Charlie Wyke-Smith - switch your left and center columns in your layout to have the center column first in the markup! Putting the content first in your markup can significantly improve your search engine rankings.This demo shows the CSS required to switch the left and center column - the center column (content - div "column2") is first in the markup but appears after the left column (navigation - div "column1") in the layout.Without the margin-left properties on columns 1 and 2, they appear in the browser in the order shown in the markup - 2, 1, 3.This arrangement is achieved by the use of a negative left margin on column 1 to move it to the left anda a positive left margin on column 2 to move it to the right, which exchanges the position of the two columns.Note that left margins on left floats get doubled in IE unles you apply the Steve Caslon hack of adding display:inline tothe element, in this case column 2. More on this bug at http://www.positioniseverything.net/explorer/doubled-margin.html  This example also uses a floated wrapper around the three columns - this forces the wrapper to enclose the three columns so that the footer is always below whichever column is longest.This is step one, before the left-margin adjustments are applied */body {font: 0.8em verdana, arial, sans-serif;}* {margin:0px; padding:0px;}div#header {width:650px; background-color:#CAF;}div#contentarea {float:left; width:650px; background-color:#CCC;}div#column1 {float:left; width:150px; background-color:#FCC;}div#column2 {float:left; width:350px; background-color:#CFC;}div#column3 { float:left; width:150px; background-color:#AAF;}div#footer {width:650px; background-color:#FAC;}</style></head><body><div id="header">This is the header</div><div id="contentarea"><div id="column2">Column 2. This is the first column in the markup. This is the page's content.</div><div id="column1">Column 1. This is the second column in the markup. This is the left navigation. ..</div><div id="column3">Column 3. This is the third column in the markup. The "contentarea"  wrapper round the three columns is floated left like the three columns, to force it to enclose the three columns. Because of this, no matter which of the three columns is longest, the footer sits below it...</div></div><!--end contentarea--><div id="footer">This is the footer</div></body></html>