<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><head><title>Basic two column</title><meta http-equiv="Content-type" content="text/html; charset=iso-8859-1" /><meta http-equiv="Content-Language" content="en-us" /><link href="demo_styles.css" rel="stylesheet" type="text/css" /><style type="text/css">body {margin:0px; padding:0px;}</style></head><body><div id="nav">	<ul>		<li><a href="#">Link 1</a></li>		<li><a href="#">Link 2</a></li>		<li><a href="#">Link 3</a></li>	</ul></div><div id="content">	<h1>A Simple Two-Column Layout</h1>	<p><strong>Step 1 - No styling yet - this is the default layout.</strong> In this example, we are going to use absolute positioning to create a two-column 	layout, which is perhaps the most common page layout you will see on the Web. This format enables you to follow the widely adopted convention 	of placing navigation in a vertical "stack" on the left side.</p>	<p>The content area - the second column - is typically much wider than the navigation column, as this is where the real infomation of the page goes.</p>	<p>The most important decision in a design like this is: will one, both or none of the columns change size to fit the width of the browser?</p>	<p>In this case, we'll fix the width of the navigation column and let the content column fill the rest of the browser's width.</p></div><!--div id="footer">The footer</div--></body></html>